# Change prefix if not on ssh
if-shell 'test -z "$SSH_CLIENT"' 'unbind C-b; set-option -g prefix C-a'

# unbind C-b
# set-option -g prefix C-z

bind-key a send-keys C-a


bind-key -n C-x send-keys C-b

set -g -a terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'

# Options
setw -g mouse
setw -g mode-keys vi
set-option -g set-titles on
set -g base-index 1
set -g default-terminal "xterm-256color"
set-option -ga terminal-overrides ",xterm-256color:Tc"
set-option -g default-shell $SHELL
set -sg escape-time 0 # No delay for escape key press
if-shell "test -f /usr/local/bin/reattach-to-user-namespace" 'set-option -g default-command "which reattach-to-user-namespace > /dev/null && reattach-to-user-namespace -l ${SHELL} || ${SHELL}"'

# Plugin Options
set -g @continuum-restore 'on' # Restore environment on tmux server start
# set -g @continuum-boot 'on'
# set -g @continuum-boot-options 'iterm'

set -g @resurrect-save 'S'
set -g @resurrect-restore 'R'
set -g @resurrect-strategy-nvim 'session'

# Bindings
# h/l on local, y/o on ssh
if-shell 'test -z "$SSH_CLIENT"' 'bind -n C-h previous-window'
if-shell 'test -z "$SSH_CLIENT"' 'bind -n C-l next-window'
if-shell 'test -n "$SSH_CLIENT"' 'bind -n C-y previous-window'
if-shell 'test -n "$SSH_CLIENT"' 'bind -n C-o next-window'

bind-key < swap-window -t :-
bind-key > swap-window -t :+

# Split bindings. Like :s and :vs from vim
# bind-key v split-window -h # %
# bind-key s split-window -v # "
bind b split-window -c "#{pane_current_path}"
bind v split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"
# bind s choose-session
bind-key s choose-tree -Zs
bind t  setw automatic-rename

bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

bind-key Z switch-client -T RESIZE

bind-key -T RESIZE k resize-pane -U \; switch-client -T RESIZE
bind-key -T RESIZE j resize-pane -D \; switch-client -T RESIZE
bind-key -T RESIZE h resize-pane -L \; switch-client -T RESIZE
bind-key -T RESIZE l resize-pane -R \; switch-client -T RESIZE

bind-key -T RESIZE K resize-pane -U 5 \; switch-client -T RESIZE
bind-key -T RESIZE J resize-pane -D 5 \; switch-client -T RESIZE
bind-key -T RESIZE H resize-pane -L 5 \; switch-client -T RESIZE
bind-key -T RESIZE L resize-pane -R 5 \; switch-client -T RESIZE

bind -n C-p last-window

bind-key J switch-client -T JOIN

# Choose
bind-key -T JOIN h choose-tree -Z "join-pane -bh -s '%%'"
bind-key -T JOIN j choose-tree -Z "join-pane -v -s '%%'"
bind-key -T JOIN k choose-tree -Z "join-pane -bv -s '%%'"
bind-key -T JOIN l choose-tree -Z "join-pane -h -s '%%'"

# bind-key -T JOIN H choose-tree -Z "join-pane -bh -t '%%'"
# bind-key -T JOIN J choose-tree -Z "join-pane -v -t '%%'"
# bind-key -T JOIN K choose-tree -Z "join-pane -bv -t '%%'"
# bind-key -T JOIN L choose-tree -Z "join-pane -h -t '%%'"
# also switch to new pane
# NOTE ejects you if you move last pane in session (even though another session exists?)
bind-key -T JOIN H choose-tree -Z "run-shell \"~/.config/tmux/join-pane-to-target-and-switch.sh -bh '%%'\""
bind-key -T JOIN J choose-tree -Z "run-shell \"~/.config/tmux/join-pane-to-target-and-switch.sh -v '%%'\""
bind-key -T JOIN K choose-tree -Z "run-shell \"~/.config/tmux/join-pane-to-target-and-switch.sh -bv '%%'\""
bind-key -T JOIN L choose-tree -Z "run-shell \"~/.config/tmux/join-pane-to-target-and-switch.sh -h '%%'\""

bind-key M switch-client -T MOVE
# Move current pane within same window
bind-key -T MOVE h choose-tree -Z "move-pane -bh -t '%%'"
bind-key -T MOVE j choose-tree -Z "move-pane -v -t '%%'"
bind-key -T MOVE k choose-tree -Z "move-pane -bv -t '%%'"
bind-key -T MOVE l choose-tree -Z "move-pane -h -t '%%'"

# bind z set-option -g status
bind z set-option status

# Use (almost) Alt-vim keys without prefix key to switch panes
# NOTE map alt to esc in Blink Shell for this to work
bind -n M-y select-pane -L
bind -n M-u select-pane -D
bind -n M-i select-pane -U
bind -n M-o select-pane -R

# Literal M-x keys on ipad keyboard in blink with alt not mapped to ESC
# bind -n ˙ select-pane -L
# bind -n ∆ select-pane -D
# bind -n ˚ select-pane -U
# bind -n ¬ select-pane -R

bind r source-file ~/.tmux.conf

bind-key R switch-client -T RUNPANE
bind-key -T RUNPANE h split-window -bh 'TMUX_PROMPT=1 DIR=bh zsh'
bind-key -T RUNPANE j split-window -v 'TMUX_PROMPT=1 DIR=v zsh'
bind-key -T RUNPANE k split-window -bv 'TMUX_PROMPT=1 DIR=bv zsh'
bind-key -T RUNPANE l split-window -h 'TMUX_PROMPT=1 DIR=h zsh'

# to enable mouse scroll, see https://github.com/tmux/tmux/issues/145#issuecomment-150736967
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e'"

bind-key -Tcopy-mode-vi 'v' send -X begin-selection
bind-key -Tcopy-mode-vi 'y' send -X copy-selection
if-shell "test `uname` = Linux" 'bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xsel -i -p && xsel -o -p | xsel -i -b"'
if-shell "test `uname` = Linux" 'bind-key p run "xsel -o | tmux load-buffer - ; tmux paste-buffer"'

if-shell "test -f /usr/local/bin/reattach-to-user-namespace" 'bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"'
# Mouse copy
# bind-key -t vi-copy mousedragend1pane copy-pipe "reattach-to-user-namespace pbcopy"
# bind-key -t vi-copy MouseUp1Pane copy-pipe "reattach-to-user-namespace pbcopy"
# bind-key -t vi-copy y copy-pipe "pbcopy"


# Status bar
set -g status-interval 2

set-option -g status-bg default
set-option -g status-fg colour7

setw -g window-status-format '#(~/.config/tmux/window-status-current-format.sh)'
setw -g window-status-current-format '#[italics] #(~/.config/tmux/window-status-current-format.sh)'
# setw -g window-status-format '#[fg=#fddbce,bg=colour7] #W '

# if-shell 'test -n "$SSH_CLIENT"' \
#     'setw -g window-status-current-format "#[fg=colour0,bg=colour6] #{window_index} #W #P #(hostname)"' \
#     'setw -g window-status-current-format "#[fg=#dfdfdf,bg=colour4] #W "'
# setw -g window-status-current-format '#[fg=#E7E7D8,bg=#2D5C76] #W '
# setw -g window-status-current-format '#[fg=#E7E7D8,bg=#A15FA9] #W '

# set-option -g status-left '#[bg=red][#{session_name}]#[bg=blue] '
set-option -g status-left '[#{session_name}] '
# set-option -g status-left-style 'bg=red,italics'
# set-option -g status-right '#(~/.tmux/plugins/tmux-mem-cpu-load/tmux-mem-cpu-load --interval 2 -a 0) #(~/bin/tmux_right)'
# set-option -g status-right '#(~/bin/tmux_right)'
# set-option -g status-right "#{host} #(hostname) #{?client_prefix,prefix,noprefix}"
set-option -g status-right "#(~/tmux-status.sh)"
# set-option -g status-right ''
# set-option -g status-right '#(~/bin/crypto-status.sh)'

set-option -g status-right-length 120
set-option -g status-left-length 40

unbind -T copy-mode-vi MouseDragEnd1Pane

# set -g window-status-current-fg green
# set -g window-status-current-bg colour0

# Plugins
# set -g @plugin 'tmux-plugins/tmux-resurrect'
# set -g @plugin 'tmux-plugins/tmux-continuum'
# set -g @plugin 'thewtex/tmux-mem-cpu-load'

# TMUX Plugin Manager
run '~/.tmux/plugins/tpm/tpm'

# command-prompt -I ubuntu,66.70.222.104 -p user,host "split-window ssh %1@%2"
